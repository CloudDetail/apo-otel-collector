name: Build Docker Images

permissions:
  contents: read

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  REGISTRY_HOST: registry.cn-hangzhou.aliyuncs.com
  CONTAINER_NAME: otel-collector
  DEPLOYMENT_NAME: apo-otel-collector-gateway
  NAMESPACE: apo

jobs:
  build-image:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG_NAME: ${{ steps.build-image.outputs.IMAGE_TAG_NAME }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@4574d27a4764455b42196d70a065bc6853246a25

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca

      - name: Log in to container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          registry: ${{ env.REGISTRY_HOST }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Generate image metadata
        id: build-image
        env:
          BRANCH_NAME: ${{ github.ref_name }}
          COMMIT_HASH: ${{ github.sha }}
        run: |
          DATE=$(date +"%Y%m%d%H%M%S%Z")
          BRANCH_NAME=$(echo "$BRANCH_NAME" | sed 's#[^a-zA-Z0-9._-]#-#g')
          IMAGE_TAG_NAME="${BRANCH_NAME}-${COMMIT_HASH::7}-${DATE}"
          echo "IMAGE_TAG_NAME=$IMAGE_TAG_NAME" >> "$GITHUB_OUTPUT"
          echo "IMAGE_FULL_TAG_AMD64=${{ env.REGISTRY_HOST }}/${{ secrets.REGISTRY_USERNAME }}/${{ env.CONTAINER_NAME }}:${IMAGE_TAG_NAME}" >> $GITHUB_ENV  
          echo "IMAGE_FULL_TAG_ARM64=${{ env.REGISTRY_HOST }}/${{ secrets.REGISTRY_USERNAME }}/${{ env.CONTAINER_NAME }}:${IMAGE_TAG_NAME}-arm64" >> $GITHUB_ENV

      - name: Build and push AMD64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ env.IMAGE_FULL_TAG_AMD64 }}

      - name: Build and push ARM64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ${{ env.IMAGE_FULL_TAG_ARM64 }}

  deploy-dev:
    runs-on: [self-hosted, dev]
    needs: [build-image]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to dev
        env:
          IMAGE_TAG_NAME: ${{ needs.build-image.outputs.IMAGE_TAG_NAME }}
        run: |
          export KUBECONFIG="/root/.kube/config"
          # Detect the node architecture
          NODE_ARCH=$(kubectl get node -o jsonpath='{.items[0].status.nodeInfo.architecture}')
          if [ "$NODE_ARCH" = "arm64" ]; then
            IMAGE_FULL_NAME="${{ env.REGISTRY_HOST }}/${{ secrets.REGISTRY_USERNAME }}/${{ env.CONTAINER_NAME }}:${IMAGE_TAG_NAME}-arm64"
          else
            IMAGE_FULL_NAME="${{ env.REGISTRY_HOST }}/${{ secrets.REGISTRY_USERNAME }}/${{ env.CONTAINER_NAME }}:${IMAGE_TAG_NAME}"
          fi
          echo "IMAGE_FULL_NAME=$IMAGE_FULL_NAME"
          kubectl set image deployment ${{ env.DEPLOYMENT_NAME }} ${{ env.CONTAINER_NAME }}=$IMAGE_FULL_NAME -n ${{ env.NAMESPACE }}
