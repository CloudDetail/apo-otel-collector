// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.20.3
// source: internal/model/apo_slowthreshold.proto

package model

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	SlowThresholdService_QuerySlowThreshold_FullMethodName = "/kindling.SlowThresholdService/QuerySlowThreshold"
)

// SlowThresholdServiceClient is the client API for SlowThresholdService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SlowThresholdServiceClient interface {
	QuerySlowThreshold(ctx context.Context, in *SlowThresholdRequest, opts ...grpc.CallOption) (*SlowThresholdResponse, error)
}

type slowThresholdServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSlowThresholdServiceClient(cc grpc.ClientConnInterface) SlowThresholdServiceClient {
	return &slowThresholdServiceClient{cc}
}

func (c *slowThresholdServiceClient) QuerySlowThreshold(ctx context.Context, in *SlowThresholdRequest, opts ...grpc.CallOption) (*SlowThresholdResponse, error) {
	out := new(SlowThresholdResponse)
	err := c.cc.Invoke(ctx, SlowThresholdService_QuerySlowThreshold_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SlowThresholdServiceServer is the server API for SlowThresholdService service.
// All implementations must embed UnimplementedSlowThresholdServiceServer
// for forward compatibility
type SlowThresholdServiceServer interface {
	QuerySlowThreshold(context.Context, *SlowThresholdRequest) (*SlowThresholdResponse, error)
	mustEmbedUnimplementedSlowThresholdServiceServer()
}

// UnimplementedSlowThresholdServiceServer must be embedded to have forward compatible implementations.
type UnimplementedSlowThresholdServiceServer struct {
}

func (UnimplementedSlowThresholdServiceServer) QuerySlowThreshold(context.Context, *SlowThresholdRequest) (*SlowThresholdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QuerySlowThreshold not implemented")
}
func (UnimplementedSlowThresholdServiceServer) mustEmbedUnimplementedSlowThresholdServiceServer() {}

// UnsafeSlowThresholdServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SlowThresholdServiceServer will
// result in compilation errors.
type UnsafeSlowThresholdServiceServer interface {
	mustEmbedUnimplementedSlowThresholdServiceServer()
}

func RegisterSlowThresholdServiceServer(s grpc.ServiceRegistrar, srv SlowThresholdServiceServer) {
	s.RegisterService(&SlowThresholdService_ServiceDesc, srv)
}

func _SlowThresholdService_QuerySlowThreshold_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SlowThresholdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlowThresholdServiceServer).QuerySlowThreshold(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SlowThresholdService_QuerySlowThreshold_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlowThresholdServiceServer).QuerySlowThreshold(ctx, req.(*SlowThresholdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SlowThresholdService_ServiceDesc is the grpc.ServiceDesc for SlowThresholdService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SlowThresholdService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "kindling.SlowThresholdService",
	HandlerType: (*SlowThresholdServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QuerySlowThreshold",
			Handler:    _SlowThresholdService_QuerySlowThreshold_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/model/apo_slowthreshold.proto",
}
